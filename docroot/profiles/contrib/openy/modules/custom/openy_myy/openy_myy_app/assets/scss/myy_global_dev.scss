/*!
 * Bootstrap v4.3.1 (https://getbootstrap.com/)
 * Copyright 2011-2019 The Bootstrap Authors
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */

@import "bootstrap/scss/_functions";
@import "bootstrap/scss/_variables";
// Toggles
//
// Used in conjunction with global variables to enable certain theme features.

// Vendor
@import "bootstrap/scss/vendor/_rfs";

// Deprecate
@import "bootstrap/scss/mixins/_deprecate";

// Utilities
@import "bootstrap/scss/mixins/_breakpoints";
@import "bootstrap/scss/mixins/_hover";
@import "bootstrap/scss/mixins/_image";
@import "bootstrap/scss/mixins/_badge";
@import "bootstrap/scss/mixins/_resize";
@import "bootstrap/scss/mixins/_screen-reader";
@import "bootstrap/scss/mixins/_size";
@import "bootstrap/scss/mixins/_reset-text";
@import "bootstrap/scss/mixins/_text-emphasis";
@import "bootstrap/scss/mixins/_text-hide";
@import "bootstrap/scss/mixins/_text-truncate";
@import "bootstrap/scss/mixins/_visibility";

// // Components
@import "bootstrap/scss/mixins/_alert";
@import "bootstrap/scss/mixins/_buttons";
@import "bootstrap/scss/mixins/_caret";
@import "bootstrap/scss/mixins/_pagination";
@import "bootstrap/scss/mixins/_lists";
@import "bootstrap/scss/mixins/_list-group";
@import "bootstrap/scss/mixins/_nav-divider";
@import "bootstrap/scss/mixins/_forms";
@import "bootstrap/scss/mixins/_table-row";

// // Skins
@import "bootstrap/scss/mixins/_background-variant";
@import "bootstrap/scss/mixins/_border-radius";
@import "bootstrap/scss/mixins/_box-shadow";
@import "bootstrap/scss/mixins/_gradients";
@import "bootstrap/scss/mixins/_transition";

// // Layout
@import "bootstrap/scss/mixins/_clearfix";
// Framework grid generation
//
// Used only by Bootstrap to generate the correct number of grid classes given
// any value of `$grid-columns`.

@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
  // Common properties for all breakpoints
  %grid-column {
    position: relative;
    width: 100%;
    padding-right: $gutter / 2;
    padding-left: $gutter / 2;
  }

  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    // Allow columns to stretch full width below their breakpoints
    @for $i from 1 through $columns {
      .col-myy#{$infix}-#{$i} {
        @extend %grid-column;
      }
    }
    .col-myy#{$infix},
    .col-myy#{$infix}-auto {
      @extend %grid-column;
    }

    @include media-breakpoint-up($breakpoint, $breakpoints) {
      // Provide basic `.col-myy-{bp}` classes for equal-width flexbox columns
      .col-myy#{$infix} {
        flex-basis: 0;
        flex-grow: 1;
        max-width: 100%;
      }
      .col-myy#{$infix}-auto {
        flex: 0 0 auto;
        width: auto;
        max-width: 100%; // Reset earlier grid tiers
      }

      @for $i from 1 through $columns {
        .col-myy#{$infix}-#{$i} {
          @include make-col($i, $columns);
        }
      }

      .order#{$infix}-first { order: -1; }

      .order#{$infix}-last { order: $columns + 1; }

      @for $i from 0 through $columns {
        .order#{$infix}-#{$i} { order: $i; }
      }

      // `$columns - 1` because offsetting by the width of an entire row isn't possible
      @for $i from 0 through ($columns - 1) {
        @if not ($infix == "" and $i == 0) { // Avoid emitting useless .offset-0
          .offset#{$infix}-#{$i} {
            @include make-col-offset($i, $columns);
          }
        }
      }
    }
  }
}

@import "bootstrap/scss/mixins/_grid";
@import "bootstrap/scss/mixins/_float";

@import "bootstrap/scss/_root";
@import "bootstrap/scss/_reboot";
@import "bootstrap/scss/_type";
@import "bootstrap/scss/_images";
@import "bootstrap/scss/_code";
@import "bootstrap/scss/_grid";
@import "bootstrap/scss/_tables";
@import "bootstrap/scss/_forms";
@import "bootstrap/scss/_buttons";
@import "bootstrap/scss/_transitions";
@import "bootstrap/scss/_dropdown";
@import "bootstrap/scss/_button-group";
@import "bootstrap/scss/_input-group";
@import "bootstrap/scss/_custom-forms";
@import "bootstrap/scss/_nav";
@import "bootstrap/scss/_navbar";
@import "bootstrap/scss/_card";
@import "bootstrap/scss/_breadcrumb";
@import "bootstrap/scss/_pagination";
@import "bootstrap/scss/_badge";
@import "bootstrap/scss/_jumbotron";
@import "bootstrap/scss/_alert";
@import "bootstrap/scss/_progress";
@import "bootstrap/scss/_media";
@import "bootstrap/scss/_list-group";
@import "bootstrap/scss/_close";
@import "bootstrap/scss/_toasts";
@import "bootstrap/scss/_modal";
@import "bootstrap/scss/_tooltip";
@import "bootstrap/scss/_popover";
@import "bootstrap/scss/_carousel";
@import "bootstrap/scss/_spinners";

@import "bootstrap/scss/utilities/_align";
@import "bootstrap/scss/utilities/_background";
@import "bootstrap/scss/utilities/_borders";
@import "bootstrap/scss/utilities/_clearfix";

// stylelint-disable declaration-no-important

//
// Utilities for common `display` values
//

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @each $value in $displays {
      .d-myy#{$infix}-#{$value} { display: $value !important; }
    }
  }
}


//
// Utilities for toggling `display` in print
//

@media print {
  @each $value in $displays {
    .d-myy-print-#{$value} { display: $value !important; }
  }
}

@import "bootstrap/scss/utilities/_embed";
@import "bootstrap/scss/utilities/_flex";
@import "bootstrap/scss/utilities/_float";
@import "bootstrap/scss/utilities/_overflow";
@import "bootstrap/scss/utilities/_position";
@import "bootstrap/scss/utilities/_screenreaders";
@import "bootstrap/scss/utilities/_shadows";
@import "bootstrap/scss/utilities/_sizing";
@import "bootstrap/scss/utilities/_stretched-link";
@import "bootstrap/scss/utilities/_spacing";
@import "bootstrap/scss/utilities/_text";
@import "bootstrap/scss/utilities/_visibility";

@import "bootstrap/scss/_print";
