<?php

/**
 * @file
 * Contains openy_font.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\file\FileInterface;

/**
 * Implements hook_help().
 */
function openy_font_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the openy_font module.
    case 'help.page.openy_font':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Open Y Font settings module.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Checks that the filename is allowed.
 *
 * @param \Drupal\file\FileInterface $file
 *   A file entity.
 * @param string $font_style
 *   A font style name.
 *
 * @return array
 *   An empty array if the file name is allowed or an array containing an
 *   error message if it's not.
 *
 * @see hook_file_validate()
 */
function openy_font_file_validation(FileInterface $file, $font_style) {
  $errors = [];

  $regex = '/.*' . preg_quote($font_style) . '.*$/i';
  if (!preg_match($regex, $file->getFilename())) {
    $errors[] = t("It looks like that you're trying to upload wrong font. Font name should contain %font_style in the name.", ['%font_style' => $font_style]);
  }
  else {
    $file->setPermanent();
    $file->save();
    /** @var \Drupal\file\FileUsage\DatabaseFileUsageBackend $file_usage */
    $file_usage = \Drupal::service('file.usage');
    $file_usage->add($file, 'openy_font', 'user', \Drupal::currentUser()->id());
  }
  return $errors;
}

/**
 * Implements hook_page_attachments().
 *
 * Attach the font-face css to all pages that use the default theme.
 */
function openy_font_page_attachments(&$page) {
  // Without a check it will load for admin theme, as well.
  if (\Drupal::theme()
      ->getActiveTheme()
      ->getName() != \Drupal::config('system.theme')->get('default')
  ) {
    return;
  }

  $config = \Drupal::config('openy_font.settings');
  $css = '';

  // Unfortunately, this can't be looped because we don't have a label for the font names.
  $bold_settings = $config->get('cachet_bold');
  if (!empty($bold_settings)) {
    $bold = \Drupal\file\Entity\File::load(reset($bold_settings))
      ->url('canonical');
    $css .= "
        @font-face {
          font-family: Cachet Bold;
          src: url($bold);
        }
      ";
  }
  $book_settings = $config->get('cachet_book');
  if (!empty($book_settings)) {
    $book = \Drupal\file\Entity\File::load(reset($book_settings))
      ->url('canonical');
    $css .= "
        @font-face {
          font-family: Cachet W01 Book;
          src: url($book);
        }
      ";
  }
  $medium_settings = $config->get('cachet_medium');
  if (!empty($medium_settings)) {
    $medium = \Drupal\file\Entity\File::load(reset($medium_settings))
      ->url('canonical');
    $css .= "
        @font-face {
          font-family: Cachet Medium;
          src: url($medium);
        }
      ";
  }
  if (!empty($css)) {
    $page['#attached']['html_head'][] = [
      [
        '#tag' => 'style',
        '#value' => $css,
      ],
      'cachet_font_styles',
    ];
  }
}
