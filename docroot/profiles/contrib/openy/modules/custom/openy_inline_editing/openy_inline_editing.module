<?php

/**
 * @file
 * Module file.
 */

use Drupal\Component\Utility\Html;

/**
 * Implements hook_preprocess_node().
 */
function openy_inline_editing_preprocess_node(&$variables, $hook) {
  if (\Drupal::currentUser()->hasPermission('geysir manage paragraphs from front-end')) {
    $variables = openy_inline_editing_remove_geysir_add_prgf_link($variables);
  }
}
/**
 * Implements template_preprocess_links().
 */
function openy_inline_editing_preprocess_links(&$variables) {
  // @deprecated in Drupal 8.0.x and will be removed before 9.0.0. This feature
  // of adding a class based on the associative key can cause CSS class name
  // conflicts.
  if (!empty($variables['links'])) {
    foreach ($variables['links'] as $key => $value) {
      if (!is_numeric($key)) {
        $class = Html::getClass($key);
        $variables['links'][$key]['attributes']->addClass($class);
      }
    }
  }
}

/**
 * Implements template_preprocess_input__image_button().
 */
function openy_inline_editing_preprocess_input__image_button(&$variables) {
  if (strpos($variables['element']['#src'], 'geysir')) {
    $path = drupal_get_path('module', 'openy_inline_editing') . '/assets/icons/';
    $geySirIconsMap = [
      '1 column' => $path . '1-column.svg',
      '2 columns' => $path . '2-column.svg',
      '3 columns' => $path . '3-column.svg',
      '4 columns' => $path . '4-column.svg',
      'Banner' => $path . 'banner.svg',
      'FAQ' => $path . 'faq.svg',
      'Gallery' => $path . 'gallery.svg',
      'Grid Content' => $path . 'grid-content.svg',
      'Promo Card' => $path . 'promo-card.svg',
      'Secondary Description and Sidebar' => $path . 'secondary-description.svg',
      'Simple content' => $path . 'simple-content.svg',
      'Story Card' => $path . 'story-card.svg',
      'Teaser' => $path . 'teaser.svg',
      'Small Banner' => $path . 'small-banner.svg',
    ];
    $variables['title'] = $variables['element']['#value'];
    if (!empty($geySirIconsMap[$variables['attributes']['value']])) {
      $variables['attributes']['src'] = $geySirIconsMap[$variables['attributes']['value']];
    } else {
      $variables['is_hidden'] = true;
    }
  }
}

/**
 * Implements template_preprocess_geysir_field_paragraph_wrapper().
 */
function openy_inline_editing_preprocess_geysir_field_paragraph_wrapper(&$variables) {
  $paragraph = $variables['element']['#paragraph'];
  $allowedParagraphs = [
    '1c',
    '2c',
    '3c',
    '4c',
    'banner',
    'faq',
    'gallery',
    'grid_content',
    'promo_card',
    'secondary_description_sidebar',
    'simple_content',
    'story_card',
    'teaser',
    'small_banner',
  ];
  $type = $paragraph->getType();
  if (!in_array($type, $allowedParagraphs)) {
    $variables['attributes']['class'][] = 'hide-geysir-links';
    $variables['links'] = '';
  }
}

/**
 *  Allow geysir module Add new paragraph only to Landing Page.
 */
function openy_inline_editing_remove_geysir_add_prgf_link($variables) {
  $node = $variables["node"];
  if ($node->bundle() !== 'landing_page') {
    $field_definitions = $node->getFieldDefinitions();

    // Check if multiple paragraph fields.
    $paragraph_fields = [];
    foreach ($field_definitions as $field_definition) {
      if ($field_definition->getType() == 'entity_reference_revisions') {
        $field_storage_definition = $field_definition->getFieldStorageDefinition();
        if ($field_storage_definition->getSetting('target_type') == 'paragraph') {
          $paragraph_fields[] = $field_storage_definition->get('field_name');
        }
      }
    }

    if (empty($paragraph_fields)) {
      return $variables;
    }

    foreach ($paragraph_fields as $field_name) {
      if (empty($variables['content'][$field_name]['#items'])) {
        unset($variables['content'][$field_name]['#suffix']);
      }
    }
  }
  return $variables;
}
