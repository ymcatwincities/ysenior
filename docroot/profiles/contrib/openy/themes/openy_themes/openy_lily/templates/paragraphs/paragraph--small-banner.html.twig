{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% set classes = [
'text-banner',
'paragraph',
'paragraph--type--' ~ paragraph.bundle|clean_class,
view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
'banner',
'banner--small',
] %}
{% set color = '#' ~ content.field_prgf_color['#items'].entity.field_color.value %}
{% set description_text = content.field_prgf_description.0['#text'] is not empty %}
{% set background = content.field_prgf_image['#field_name'] %}
{% if background is empty %}
  {% set col_size %}
    col-sm-12
  {% endset %}
{% else %}
  {% set col_size %}
    col-sm-6
  {% endset %}
{% endif %}
<section id="small-text-banner" {{ attributes.addClass(classes).removeClass('banner') }}
         style='background-color: {{ color }}'>
  <div class="container-fluid">
    <div class="row">
      <div class="{{ col_size|trim }} header-copy">
        <div class="banner-copy">
          <h1>{{ content.field_prgf_headline }}</h1>
          {{ content.field_prgf_description }}
        </div>
      </div>
      {% if content.image_path is not empty %}
        <div class="col-sm-6 header-image"
            {% if content.image_path %} style="background-image: url({{ content.image_path }});"{% endif %}>
          <figure class="text-center visible-xs">
            {{ content.field_prgf_image }}
          </figure>
        </div>
      {% endif %}
    </div>
  </div>
</section>
