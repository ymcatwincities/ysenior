{#
/**
 * @file
 * Default theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @ingroup themeable
 */
#}

{%
set classes = [
  'node',
  'node--type-' ~ node.bundle|clean_class,
  node.isPromoted() ? 'node--promoted',
  node.isSticky() ? 'node--sticky',
  not node.isPublished() ? 'node--unpublished',
  view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
]
%}

{# default header #}
{% include '@openy_carnation/node/include/header-default.html.twig' %}

{# branch contact card #}
<article{{ attributes.addClass('branch-header mt-0 mt-lg-5') }}>

  {# desktop view #}
  <div class="d-none d-sm-inline-block w-100 mt-3 mb-5 desktop">
    <div class="container">
      <div class="row branch-header-inner branch-info" data-branch-name="{{ node.label }}">
        <div class="column col-sm-5 address-wrapper branch-header__item">
          <h4>{{ 'Address & Contacts'|t }}</h4>
          {{ content.field_location_address }}

          {% if content.field_location_phone|render|trim is not empty %}
          <div class="wrapper-field-location-phone">
            <div class="field-location-phone">
              <span class="label-inline"><i class="fas fa-phone-volume"></i> {{ 'Tel'|t }}:</span> {{ content.field_location_phone }}
            </div>
          </div>
          {% endif %}

          {% if content.field_location_fax|render|trim is not empty %}
          <div class="wrapper-field-location-fax">
            <div class="field-location-fax">
              <span class="label-inline"><i class="fas fa-phone-volume"></i> {{ 'Fax'|t }}:</span> {{ content.field_location_fax }}
            </div>
          </div>
          {% endif %}

          {{ content.field_location_directions }}

        </div>

        <div class="column col-sm-7 hours-wrapper branch-header__item arrow-list">
          <h5 class="mb-2">{{ content.field_facility_type }}</h5>
          {{ content.field_facility_loc }}
        </div>

      </div>
    </div>
  </div>

  {# mobile view #}
  <div class="d-inline d-sm-none mobile">
    <div class="container">
      <div class="row">
        <div class="w-100">

          {# location contact info tabs #}
          <ul class="nav bg-pink">
            <li class="nav-item h4 m-0 d-flex align-items-stretch">
              <a href="#tabs-phone" class="nav-link active d-flex align-items-center text-white p-3" data-toggle="pill" aria-selected="true"><i class="fa fa-phone"></i></a>
            </li>

            {% if content.field_location_fax|render|trim is not empty %}
            <li class="nav-item h4 m-0 d-flex align-items-stretch">
              <a href="#tabs-marker" class="nav-link d-flex align-items-center text-white p-3" data-toggle="pill" aria-selected="false"><i class="fas fa-map-marker-alt"></i></a>
            </li>
            {% endif %}

            <li class="nav-item h4 m-0 d-flex align-items-stretch">
              <a href="#tabs-clock" class="nav-link d-flex align-items-center text-white p-3" data-toggle="pill" aria-selected="false"><i class="far fa-clock"></i></a>
            </li>
          </ul>

          <div class="tab-content bg-indigo text-white">

            {# phone #}
            <div id="tabs-phone" class="tab-pane fade show active p-3">
              <h4 class="text-uppercase">{{ 'Contacts'|t }}</h4>
              <div class="wrapper-field-location-phone">
                <div class="field-location-phone">
                  <span class="label-inline"><i class="fa fa-phone"></i> {{ 'Tel'|t }}:</span> {{ content.field_location_phone }}
                </div>
              </div>
              {% if content.field_location_fax|render|trim is not empty %}
              <div class="wrapper-field-location-fax">
                <div class="field-location-fax">
                  <span class="label-inline"><i class="fa fa-fax"></i> {{ 'Fax'|t }}:</span> {{ content.field_location_fax }}
                </div>
              </div>
              {% endif %}
            </div>

            {# address #}
            <div id="tabs-marker" class="tab-pane fade p-3">
              <h4 class="text-uppercase">{{ 'Address & Contacts'|t }}</h4>
              {{ content.field_location_address }}
              {{ content.field_location_directions }}
            </div>

            {# associated branch #}
            <div id="tabs-clock" class="tab-pane fade p-3">
              <h4 class="text-uppercase">{{ content.field_facility_type }}</h4>
              {{ content.field_facility_loc }}
            </div>

          </div>
        </div>
      </div>

    </div>
  </div>
</article>

{# facility content #}
<div class="container">
  <div class="row">

    <div class="branch-content col mt-4">
      <article{{ branch_attributes.addClass(classes) }}>
        <div{{ content_attributes.addClass('node__content') }}>
          {{ content.field_content }}
        </div>
      </article>
    </div>

    {% if content.field_sidebar_content|render|striptags is not empty %}
    <div class="col-12 col-md-4 col-lg-3 side-col">
      <div class="card mb-3">
        <div class="card-body">
          <div class="d-inline-block w-100 pb-4 mb-4 border-light border-bottom">
            {{ content.field_sidebar_content }}
          </div>
        </div>
      </div>
    </div>
    {% endif %}

  </div>
</div>

{{ content.field_bottom_content }}
