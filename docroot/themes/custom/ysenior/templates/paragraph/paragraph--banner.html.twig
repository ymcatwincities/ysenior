{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    'banner',
    'banner--large'
  ]
%}
{% set color = '#' ~ content.field_prgf_color['#items'].entity.field_color.value %}

<div{{ attributes.addClass(classes) }} {% if color is not empty %} style="background-color: {{ color }}" {% endif %}>

  {% if not paragraph.field_prgf_image.isEmpty() %}
    <div class="banner-bg" style="background: url('{{ content.image_path }}') center center; background-size: cover;">
      <span></span>
    </div>
  {% endif %}

  <div class="banner-cta d-block d-lg-flex">
    <div class="banner-cta-content container align-items-center m-auto py-5 text-center text-white">
      <div class="banner-cta-section">

        {% if not content.field_prgf_headline.isEmpty() %}
        <h1 class="banner-title text-uppercase mb-4 text-white">
          {{ content.field_prgf_headline }}
        </h1>
        {% endif %}

        {% if not content.field_prgf_description.isEmpty() %}
        <div class="banner-description mb-3 text-white">
          {{ content.field_prgf_description }}
        </div>
        {% endif %}

        {% if not content.field_prgf_link.isEmpty() %}
          {{ content.field_prgf_link }}
        {% endif %}

      </div>
    </div>
  </div>

</div>


